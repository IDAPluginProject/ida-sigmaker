name: Build and upload to PyPI

on:
    workflow_dispatch:
    release:
        types:
            - published
    workflow_run:
        workflows: ["Release"]
        types:
            - completed

# make concurrency tag-aware so one run doesn't cancel the other incorrectly
concurrency:
    group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
    cancel-in-progress: true

jobs:
    # build_wheels:
    #     name: Build wheels for ${{ matrix.os }}
    #     runs-on: ${{ matrix.runs-on }}
    #     strategy:
    #         matrix:
    #             include:
    #                 - os: linux-intel
    #                   runs-on: ubuntu-latest
    #                 - os: linux-arm
    #                   runs-on: ubuntu-24.04-arm
    #                 - os: windows-intel
    #                   runs-on: windows-latest
    #                 - os: windows-arm
    #                   runs-on: windows-11-arm
    #                 - os: macos-intel
    #                   # macos-13 was the last x86_64 runner
    #                   runs-on: macos-13
    #                 - os: macos-arm
    #                   # macos-14+ (including latest) are ARM64 runners
    #                   runs-on: macos-latest
    #                 - os: android-intel
    #                   runs-on: ubuntu-latest
    #                   platform: android
    #                 - os: android-arm
    #                   runs-on: macos-latest
    #                   platform: android
    #                 - os: ios
    #                   runs-on: macos-latest
    #                   platform: ios

    #     steps:
    #         - uses: actions/checkout@v5

    #         # GitHub Actions can't currently run the Android emulator on macOS.
    #         - name: Skip Android tests on macOS
    #           if: matrix.os == 'android-arm'
    #           run: echo "CIBW_TEST_COMMAND=" >> "$GITHUB_ENV"

    #         # https://github.blog/changelog/2024-04-02-github-actions-hardware-accelerated-android-virtualization-now-available/
    #         - name: Enable KVM for Android emulator
    #           if: matrix.os == 'android-intel'
    #           run: |
    #               echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
    #               sudo udevadm control --reload-rules
    #               sudo udevadm trigger --name-match=kvm

    #         - name: Build wheels
    #           uses: pypa/cibuildwheel@v3.1.4
    #           env:
    #               CIBW_PLATFORM: ${{ matrix.platform || 'auto' }}
    #           with:
    #               package-dir: .
    #               output-dir: wheelhouse
    #               config-file: "{package}/pyproject.toml"

    #         - uses: actions/upload-artifact@v4
    #           with:
    #               name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
    #               path: ./wheelhouse/*.whl

    # build_sdist:
    #     name: Build source distribution
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v5

    #         - name: Build sdist
    #           run: pipx run build --sdist

    #         - uses: actions/upload-artifact@v4
    #           with:
    #               name: cibw-sdist
    #               path: dist/*.tar.gz

    # upload_pypi:
    #     needs: [build_wheels, build_sdist]
    #     runs-on: ubuntu-latest
    #     permissions:
    #         id-token: write
    #     if: github.event_name == 'release' && github.event.action == 'published'
    #     # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    #     # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    #     steps:
    #         - uses: actions/download-artifact@v5
    #           with:
    #               # unpacks all CIBW artifacts into dist/
    #               pattern: cibw-*
    #               path: dist
    #               merge-multiple: true

    #         - uses: pypa/gh-action-pypi-publish@release/v1

    package:
        name: Package
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v5

            - &display-version
              name: Display version
              run: |
                  python --version
                  pip --version

            - &install-build-twine
              name: Install pypa/build pypa/twine
              run: |
                  pip install --upgrade pip
                  pip install build==1.3.0 twine==6.2.0 setuptools>=65.0.0 packaging==25.0
                  echo "Installed versions:"
                  pip list | grep -E "(twine|packaging|setuptools|build)"

            - &build-wheel-sdist
              name: Build a wheel and sdist
              run: |
                  rm -rf dist/*
                  python -m build

            - &display-content-dist-folder
              name: Display content dist folder
              run: |
                  ls -shR dist/

            - &run-twine-check
              name: Run twin check
              run: |
                  twine check dist/*

            - &upload-artifact
              name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  path: ./dist/*
                  name: dist

    upload_to_pypi:
        needs: [package]
        runs-on: ubuntu-latest
        name: Upload to pypi
        permissions:
            # IMPORTANT: this permission is mandatory for trusted publishing
            id-token: write
        steps:
            - name: Download dist
              uses: actions/download-artifact@v4

            - name: Display downloaded files
              run: |
                  ls -shR
              working-directory: dist

            - uses: pypa/gh-action-pypi-publish@release/v1
              if: ${{
                  github.repository_owner == 'mahmoudimus' && (
                  (github.event_name == 'release' && github.event.action == 'published') ||
                  (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'))
                  }}
              # See https://docs.pypi.org/trusted-publishers/using-a-publisher/
              with:
                  skip-existing: true
